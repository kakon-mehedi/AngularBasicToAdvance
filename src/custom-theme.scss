// Custom Theming for Angular Material
@use "@angular/material" as mat;
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss

// Defining Light Themms Color Palate

$KakonLight-primary: mat.define-palette(mat.$indigo-palette);
$KakonLight-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
$KakonLight-warn: mat.define-palette(mat.$red-palette);

// Defining Dark Theme Color Palates

$KakonDark-primary: mat.define-palette(mat.$deep-purple-palette);
$KakonDark-accent: mat.define-palette(mat.$green-palette, A200, A100, A400);
$KakonDark-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$KakonLight-theme: mat.define-light-theme(
  (
    color: (
      primary: $KakonLight-primary,
      accent: $KakonLight-accent,
      warn: $KakonLight-warn,
    ),
    typography: mat.define-typography-config(),
    density: 0,
  )
);

// Making Custom Dark theme

$KakonDark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $KakonDark-primary,
      accent: $KakonDark-accent,
      warn: $KakonDark-warn,
    ),
    typography: mat.define-typography-config(),
    density: 0,
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($KakonLight-theme);

.darkMode {
  @include mat.all-component-themes($KakonDark-theme);
}
